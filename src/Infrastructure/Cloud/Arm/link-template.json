{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "starter",
      "metadata": {
        "description": "Name of the web app"
      }
    },
    "dbAdminAadObjectId": {
      "type": "string",
      "metadata": {
        "description": "Azure Active directory object id of the AD admin user"
      }
    },
    "deploymentFlags": {
      "type": "object",
      "metadata": {
        "description": "Flags for optionally deploying resources"
      },
      "defaultValue": {
        "value": {
          "sqlDatabase": true,
          "storageAccount": true,
          "redisCache": true,
          "azureSearch": true,
          "appInsights": true,
          "workspace": true,
          "keyVault": true,
          "webApp": true,
          "keyVaultPolicy": true,
          "keyVaultSecrets": true
        }
      }
    },
    "uniqueString": {
      "type": "string",
      "metadata": {
        "description": "A unique string for differentiating resources"
      },
      "defaultValue": "[uniqueString(subscription().subscriptionId, resourceGroup().id, parameters('appName'))]"
    },
    "templateBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "Base location of the ARM templates"
      },
      "defaultValue": "https://raw.githubusercontent.com/bablulawrence/starter-react-dotnetcore-mvc/master/src/Infrastructure/Cloud/Arm/"
    }
  },
  "variables": {
    "sqlServerName": "[concat(parameters('appName'),'-',parameters('uniqueString'),'-sql-server')]",
    "sqlDbName": "[concat(parameters('appName'),'-sql-db')]",
    "storageAccountName": "[concat('stor',parameters('uniqueString'))]",
    "appServicePlanName": "[concat(parameters('appName'),'-app-service-plan')]",
    "redisCacheName": "[concat(parameters('appName'),'-',parameters('uniqueString'),'-redis-cache')]",
    "azureSearchName": "[concat(parameters('appName'),'-',parameters('uniqueString'),'-azure-search')]",
    "workspaceName": "[concat(parameters('appName'),'-workspace')]",
    "appInsightsName": "[concat(parameters('appName'),'-app-insights')]",
    "keyVaultName": "[concat('kv-',parameters('uniqueString'))]",
    "webAppName": "[concat(parameters('appName'),'-',parameters('uniqueString'),'-web-app')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "StorageAccount",
      "condition": "[parameters('deploymentFlags').storageAccount]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": { "value": "[variables('storageAccountName')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "SqlDatabase",
      "condition": "[parameters('deploymentFlags').sqlDatabase]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'sql-db.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlServerName": { "value": "[variables('sqlServerName')]" },
          "sqlDbName": { "value": "[variables('sqlDbName')]" },
          "dbAdminAadObjectId": {
            "value": "[parameters('dbAdminAadObjectId')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "RedisCache",
      "condition": "[parameters('deploymentFlags').redisCache]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'redis-cache.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "redisCacheName": { "value": "[variables('redisCacheName')]" },
          "diagnosticsStorageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AzureSearch",
      "condition": "[parameters('deploymentFlags').azureSearch]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'azure-search.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "azureSearchName": { "value": "[variables('azureSearchName')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "Workspace",
      "condition": "[parameters('deploymentFlags').workspace]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'workspace.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": { "value": "[variables('workspaceName')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AppInsights",
      "condition": "[parameters('deploymentFlags').appInsights]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'app-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": { "value": "[variables('appInsightsName')]" },
          "workspaceName": { "value": "[variables('workspaceName')]" }
        }
      },
      "dependsOn": ["Workspace"]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "KeyVault",
      "condition": "[parameters('deploymentFlags').keyVault]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'key-vault.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": { "value": "[variables('keyVaultName')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "WebApp",
      "condition": "[parameters('deploymentFlags').webApp]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'web-app.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "webAppName": { "value": "[variables('webAppName')]" },
          "appServicePlanName": { "value": "[variables('appServicePlanName')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "KeyVaultPolicy",
      "condition": "[parameters('deploymentFlags').keyVaultPolicy]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'key-vault-policy.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": { "value": "[variables('keyVaultName')]" },
          "webAppName": { "value": "[variables('webAppName')]" }
        }
      },
      "dependsOn": ["WebApp", "KeyVault"]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "KeyVaultSecrets",
      "condition": "[parameters('deploymentFlags').keyVaultSecrets]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUri'), 'key-vault-secrets.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "appInsightsSecretName": {
            "value": "ApplicationInsights--instrumentationKey"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "storageAccountSecretName": {
            "value": "AzureStorageAccount--accountKey"
          },
          "redisCacheName": {
            "value": "[variables('redisCacheName')]"
          },
          "redisCacheSecretName": {
            "value": "RedisCache--key"
          },
          "azureSearchName": {
            "value": "[variables('azureSearchName')]"
          },
          "azureSearchSecretName": {
            "value": "AzureSearch--adminKey"
          }
        }
      },
      "dependsOn": [
        "KeyVault",
        "AppInsights",
        "StorageAccount",
        "RedisCache",
        "AzureSearch"
      ]
    }
  ],
  "outputs": {
    "Storage Account": {
      "type": "string",
      "condition": "[parameters('deploymentFlags').storageAccount]",
      "value": "[variables('storageAccountName')]"
    },
    "Sql Server": {
      "type": "string",
      "condition": "[parameters('deploymentFlags').sqlDatabase]",
      "value": "[variables('sqlServerName')]"
    },
    "Sql Server Database": {
      "type": "string",
      "condition": "[parameters('deploymentFlags').sqlDatabase]",
      "value": "[variables('sqlDbName')]"
    },
    "Redis Cache": {
      "type": "string",
      "condition": "[parameters('deploymentFlags').redisCache]",
      "value": "[variables('redisCacheName')]"
    },
    "Azure Search": {
      "type": "string",
      "condition": "[parameters('deploymentFlags').azureSearch]",
      "value": "[variables('azureSearchName')]"
    },
    "Application Insights": {
      "type": "string",
      "condition": "[parameters('deploymentFlags').appInsights]",
      "value": "[variables('appInsightsName')]"
    },
    "Key Vault": {
      "type": "string",
      "condition": "[parameters('deploymentFlags').keyVault]",
      "value": "[variables('keyVaultName')]"
    },
    "Web App": {
      "type": "string",
      "condition": "[parameters('deploymentFlags').webApp]",
      "value": "[variables('webAppName')]"
    }
  }
}
