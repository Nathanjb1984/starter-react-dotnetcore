name: MSI User Deploy

on:
  workflow_dispatch:

jobs:
  createDbMsiUser:
    name: Add Web App MSI user to database
    runs-on: windows-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Github checkout
        uses: actions/checkout@v2

      - name: Replace web app name in SQL script for adding MSI user
        run: |
          ((Get-Content -path  .\src\Infrastructure\Cloud\AzureSqlDb\msi-user.sql).replace('web-app-name','${{ needs.deployArmJob.outputs.webAppName }}') | Set-Content -Path .\src\Infrastructure\Cloud\AzureSqlDb\msi-user.sql)

      - name: Get Azure SQL password from ALM key vault
        uses: Azure/get-keyvault-secrets@v1.0
        id: getDbAdminPassword
        with:
          keyvault: ${{ needs.deployArmJob.outputs.almKeyVaultName }}
          secrets: "AzureSqlDbAdminPassword"

      - name: Run SQL script to add MSI user to database
        uses: azure/sql-action@v1
        with:
          server-name: ${{ needs.deployArmJob.outputs.sqlServerName }}
          connection-string: "Server=tcp:${{ needs.deployArmJob.outputs.sqlServerName }}.database.windows.net,1433;Initial Catalog=${{ needs.deployArmJob.outputs.sqlDbName }};User ID=sqlAdmin;Password=${{â€¯steps.getDbAdminPassword.outputs.AzureSqlDbAdminPassword }};Persist Security Info=False;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
          sql-file: "./src/Infrastructure/Cloud/AzureSqlDb/msi-user.sql"
