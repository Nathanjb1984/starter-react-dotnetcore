name: Provision azure resources

on:
  workflow_dispatch:
    inputs:
      appName:
        description: "App name"
      subscriptionId:
        description: "Azure subscription id"
      resourceGroupName:
        description: "Azure resource group name"
      dbAdminUserName:
        description: "User name of database admin"

jobs:
  deployArm:
    name: Deploy ARM templates
    outputs:
      keyVaultName: ${{ steps.deployArm.outputs.keyVaultName }}
      storageAccountName: ${{ steps.deployArm.outputs.storageAccountName }}
      sqlServerName: ${{ steps.deployArm.outputs.sqlServerName }}
      sqlDbName: ${{ steps.deployArm.outputs.sqlDbName }}
      redisCacheName: ${{ steps.deployArm.outputs.redisCacheName }}
      azureSearchName: ${{ steps.deployArm.outputs.azureSearchName }}
      webAppName: ${{ steps.deployArm.outputs.webAppName }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Github checkout
        uses: actions/checkout@v2

      - name: Deploy ARM templates
        uses: whiteducksoftware/azure-arm-action-js@v4
        id: deployArm
        with:
          scope: resourcegroup
          subscriptionId: ${{ github.event.inputs.subscriptionId }}
          resourceGroupName: ${{ github.event.inputs.resourceGroupName }}
          templateLocation: "./src/Infrastructure/Cloud/Arm/link-template.json"
          parameters: appName=${{ github.event.inputs.appName }}
            dbAdminAadObjectId=${{ secrets.AZURE_DB_ADMIN_AAD_OBJECT_ID }}
            githubRepository=${{ github.repository }}

  updateSettings:
    needs: deployArm
    name: Add web app MSI user to database
    runs-on: windows-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Github checkout
        uses: actions/checkout@v2

      - name: Replace web app name in SQL script for adding MSI user
        run: |
          ((Get-Content -path  .\src\Infrastructure\Cloud\AzureSqlDb\msi-user.sql).replace('web-app-name','${{ needs.deployArm.outputs.webAppName }}') | Set-Content -Path .\src\Infrastructure\Cloud\AzureSqlDb\msi-user.sql)

      - name: Run SQL script to add MSI user to database
        run:
          SQLCMD -S ${{needs.deployArm.outputs.sqlServerName}}.database.windows.net
          -d ${{needs.deployArm.outputs.sqlDbName}}
          -U ${{github.event.inputs.dbAdminUserName}}
          -P ${{â€¯secrets.AZURE_DB_ADMIN_PASSWORD }}
          -i ./src/Infrastructure/Cloud/AzureSqlDb/msi-user.sql -G

      - name: Get application insights instrumentation key from key vault
        id: getAppInsightsKey
        uses: Azure/get-keyvault-secrets@v1.0
        with:
          keyvault: ${{needs.deployArm.outputs.keyVaultName}}
          secrets: "ApplicationInsights--instrumentationKey"

      - name: Update web app app settings
        id: appSettings
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{needs.deployArm.outputs.webAppName}}
          app-settings-json: '[
            { "name": "AzureAd__ClientId", "value": "${{secrets.AZURE_AD_API_APP_CLIENT_ID}}",  "slotSetting": false  },
            { "name": "AzureAd__TenantId", "value": "${{secrets.AZURE_AD_TENANT_ID}}",  "slotSetting": false  },
            { "name": "KeyVaultName", "value": "${{needs.deployArm.outputs.keyVaultName}}",  "slotSetting": false  },
            {
            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
            "value": "${{steps.getAppInsightsKey.outputs.ApplicationInsights--instrumentationKey}}",
            "slotSetting": false
            },
            {
            "name": "RedisCache__clientName",
            "value": "${{needs.deployArm.outputs.redisCacheName}}.redis.cache.windows.net:6380",
            "slotSetting": false
            },
            {
            "name": "AzureSearch__accountName",
            "value": "${{needs.deployArm.outputs.azureSearchName}}",
            "slotSetting": false
            },
            {
            "name": "AzureStorageAccount__accountName",
            "value": "${{needs.deployArm.outputs.storageAccountName}}",
            "slotSetting": false
            }
            ]'
          connection-strings-json: '[
            {
            "name" : "DefaultConnection",
            "value": "Server=tcp:${{needs.deployArm.outputs.sqlServerName}}.database.windows.net,1433;Initial Catalog=${{needs.deployArm.outputs.sqlDbName}};Encrypt=True;TrustServerCertificate=True;Connection Timeout=30;",
            "type": "SQLServer",
            "slotSetting": false
            }
            ]'
          general-settings-json: '{
            "netFrameworkVersion": "v4.0",
            "use32BitWorkerProcess": false,
            "remoteDebuggingEnabled": false,
            "alwaysOn": "false",
            "webSocketsEnabled": "false"
            }'
      - name: Display web app url
        run: echo "Web app url - ${{ steps.appSettings.outputs.webapp-url }}"
