name: Provision azure resources

on:
  workflow_dispatch:
    inputs:
      appName:
        description: "App name"
      deployPrincipalId:
        description: "Deployment service principal id"
      subscriptionId:
        description: "Azure subscription id"
      resourceGroupName:
        description: "Azure resource group name"

jobs:
  deployArmJob:
    name: Deploy ARM templates
    outputs:
      almKeyVaultName: ${{ steps.deployArm.outputs.almKeyVaultName }}
      sqlServerName: ${{ steps.deployArm.outputs.sqlServerName }}
      webAppName: ${{ steps.deployArm.outputs.webAppName }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Github checkout
        uses: actions/checkout@v2

      - name: Deploy ARM templates
        uses: whiteducksoftware/azure-arm-action-js@v4
        id: deployArm
        with:
          scope: resourcegroup
          subscriptionId: ${{ github.event.inputs.subscriptionId }}
          resourceGroupName: ${{ github.event.inputs.resourceGroupName }}
          templateLocation: "./src/Infrastructure/Cloud/Arm/link-template.json"
          parameters: appName=${{ github.event.inputs.appName }}
            deployPrincipalId=${{ github.event.inputs.deployPrincipalId }}
            githubRepository=${{ github.repository }}

  createDbMsiUser:
    needs: deployArmJob
    name: Add Web App MSI user to database
    runs-on: windows-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Github checkout
        uses: actions/checkout@v2

      - name: Replace web app name in SQL script for adding MSI user
        run: |
          ((Get-Content -path  .\src\Infrastructure\Cloud\AzureSqlDb\msi-user.sql).replace('web-app-name','${{ needs.deployArmJob.outputs.webAppName }}') | Set-Content -Path .\src\Infrastructure\Cloud\AzureSqlDb\msi-user.sql)

      - name: Get Azure SQL password from ALM key vault
        uses: Azure/get-keyvault-secrets@v1.0
        id: getDbAdminPassword
        with:
          keyvault: ${{ needs.deployArmJob.outputs.almKeyVaultName }}
          secrets: "AzureSqlDbAdminPassword"

      - uses: azure/sql-action@v1
        with:
          server-name: ${{ needs.deployArmJob.outputs.sqlServerName }}
          connection-string: ${{â€¯steps.getDbAdminPassword.outputs.AzureSqlDbAdminPassword }}
          sql-file: "./src/Infrastructure/Cloud/AzureSqlDb/msi-user.sql"
